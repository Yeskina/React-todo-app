{"version":3,"sources":["components/app-header/app-header.jsx","components/search-panel/search-panel.jsx","components/todo-list-item/todo-list-item.jsx","components/todo-list/todo-list.jsx","components/item-status-filter/item-status-filter.jsx","components/add-item-form/add-item-form.jsx","components/app/app.jsx","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","onSearchChange","type","placeholder","onChange","event","target","value","ToDoListItem","id","label","onDeleted","important","updateToDoItem","style","color","fontWeight","clsx","onClick","active","ToDoList","todos","elements","map","item","itemProps","key","ItemStatusFilter","filter","onFilterChange","buttons","name","isActive","AddItemForm","onItemAdded","useState","setLabel","onSubmit","preventDefault","maxId","createToDoItem","App","initialTodos","localStorage","getItem","JSON","parse","toDoData","setToDoData","term","setTerm","filterType","setFilterType","useEffect","setItem","stringify","items","visibleItems","length","toLowerCase","includes","search","activeAmount","doneAmount","prevState","updatedToDoItem","element","text","newItem","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2bceb4e3.chunk.js","sourcesContent":["import React from 'react'\nimport './app-header.css'\n\nconst AppHeader = ({ toDo, done }) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>ToDo List</h1>\n      <h2>\n        {toDo} more to do, {done} done\n      </h2>\n    </div>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\n\nimport './search-panel.css'\n\nconst SearchPanel = ({ onSearchChange }) => {\n  const onSearchChanged = (event) => {\n    onSearchChange(event.target.value)\n  }\n\n  return (\n    <input\n      type=\"text\"\n      className=\"form-control search-input\"\n      placeholder=\"type to search\"\n      onChange={onSearchChanged}\n    />\n  )\n}\n\nexport default SearchPanel\n","import React from 'react'\n\nimport './todo-list-item.css'\nimport clsx from 'clsx'\n\nfunction ToDoListItem({ id, label, onDeleted, important, done, updateToDoItem }) {\n  const onLabelClick = () => {\n    updateToDoItem(id, { id, label, done, important: !important })\n  }\n\n  const onCheckClick = () => {\n    updateToDoItem(id, { id, label, important, done: !done })\n  }\n\n  const style = {\n    color: important ? 'orange' : 'black',\n    fontWeight: important ? 'bold' : 'normal',\n  }\n\n  return (\n    <span className={clsx('todo-list-item', { done })}>\n      <span className=\"todo-list-item-label\" style={style} onClick={onLabelClick}>\n        {label}\n      </span>\n      <button\n        type=\"button\"\n        className={clsx('btn btn-outline-success btn-sm float-right', { active: done })}\n        onClick={onCheckClick}\n      >\n        <i className=\"fa fa-check\" />\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-danger btn-sm float-right\"\n        onClick={onDeleted}\n      >\n        <i className=\"fa fa-trash-o\" />\n      </button>\n    </span>\n  )\n}\n\nexport default ToDoListItem\n","import React from 'react'\n\nimport ToDoListItem from '../todo-list-item/todo-list-item'\nimport './todo-list.css'\n\nconst ToDoList = ({ todos, onDeleted, updateToDoItem }) => {\n  const elements = todos.map((item) => {\n    const { ...itemProps } = item\n\n    return (\n      <li key={item.id} className=\"list-group-item\">\n        <ToDoListItem\n          {...itemProps}\n          updateToDoItem={updateToDoItem}\n          onDeleted={() => onDeleted(item.id)}\n        />\n      </li>\n    )\n  })\n\n  return <ul className=\"list-group todo-list\">{elements}</ul>\n}\n\nexport default ToDoList\n","import React from 'react'\nimport clsx from 'clsx'\n\nimport './item-status-filter.css'\n\nconst ItemStatusFilter = ({ filter, onFilterChange }) => {\n  const buttonsAll = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'important', label: 'Important' },\n  ]\n\n  const buttons = buttonsAll.map(({ name, label }) => {\n    const isActive = filter === name\n\n    return (\n      <button\n        type=\"button\"\n        className={clsx('btn', isActive ? 'btn-warning' : 'btn-outline-warning')}\n        key={name}\n        onClick={() => onFilterChange(name)}\n      >\n        {label}\n      </button>\n    )\n  })\n\n  return <div className=\"btn-group\">{buttons}</div>\n}\n\nexport default ItemStatusFilter\n","import React, { useState } from 'react'\n\nimport './add-item-form.css'\n\nfunction AddItemForm({ onItemAdded }) {\n  const [label, setLabel] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    onItemAdded(label)\n    setLabel('')\n  }\n\n  return (\n    <form className=\"item-add-form d-flex\" onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        onChange={(event) => setLabel(event.target.value)}\n        placeholder=\"What needs to be done?\"\n        value={label}\n      />\n      <button type=\"submit\" className=\"btn btn-outline-secondary\">\n        Add\n      </button>\n    </form>\n  )\n}\n\nexport default AddItemForm\n","import React, { useState, useEffect } from 'react'\n\nimport AppHeader from '../app-header/app-header'\nimport SearchPanel from '../search-panel/search-panel'\nimport ToDoList from '../todo-list/todo-list'\nimport ItemStatusFilter from '../item-status-filter/item-status-filter'\nimport AddItemForm from '../add-item-form/add-item-form'\n\nimport './app.css'\n\nlet maxId = 100\n\nconst createToDoItem = (label) => {\n  return {\n    label,\n    important: false,\n    done: false,\n    id: maxId++,\n  }\n}\n\nfunction App() {\n  const initialTodos = localStorage.getItem('todos')\n    ? JSON.parse(localStorage.getItem('todos'))\n    : [\n        createToDoItem('Drink some tea'),\n        createToDoItem('Build React app'),\n        createToDoItem('Read a book'),\n        createToDoItem('Learn 10 new words in German'),\n        createToDoItem('Call your grandparents'),\n      ]\n  const [toDoData, setToDoData] = useState(initialTodos)\n  const [term, setTerm] = useState('')\n  const [filterType, setFilterType] = useState('all')\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(toDoData))\n  }, [toDoData])\n\n  const updateToDoItem = (id, updatedToDoItem) => {\n    setToDoData((prevState) =>\n      prevState.map((element) => (element.id === id ? updatedToDoItem : element))\n    )\n  }\n\n  const deleteItem = (id) => {\n    setToDoData((prevState) => prevState.filter((item) => item.id !== id))\n  }\n\n  const addItem = (text) => {\n    const newItem = createToDoItem(text)\n\n    setToDoData((prevState) => [...prevState, newItem])\n  }\n\n  const onSearchChange = (term) => {\n    setTerm(term)\n  }\n\n  const onFilterChange = (filter) => {\n    setFilterType(filter)\n  }\n\n  const search = (items, term) => {\n    if (term.length === 0) return items\n    return items.filter((item) => item.label.toLowerCase().includes(term.toLowerCase()))\n  }\n\n  const filter = (items, type) => {\n    switch (type) {\n      case 'all':\n        return items\n      case 'active':\n        return items.filter((item) => !item.done)\n      case 'important':\n        return items.filter((item) => item.important)\n      default:\n        return items\n    }\n  }\n\n  const visibleItems = filter(search(toDoData, term), filterType)\n  const activeAmount = filter(toDoData, 'active').length\n  const doneAmount = toDoData.length - activeAmount\n\n  return (\n    <div className=\"todo-app\">\n      <AppHeader toDo={activeAmount} done={doneAmount} />\n      <div className=\"top-panel d-flex\">\n        <SearchPanel onSearchChange={onSearchChange} />\n        <ItemStatusFilter filter={filterType} onFilterChange={onFilterChange} />\n      </div>\n      <ToDoList todos={visibleItems} onDeleted={deleteItem} updateToDoItem={updateToDoItem} />\n      <div className=\"top-panel d-flex\">\n        <AddItemForm onItemAdded={addItem} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/app/app'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}